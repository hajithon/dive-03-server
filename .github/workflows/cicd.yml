name: build and deploy

on:
  push:
    branches: ['main']

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    environment: main
    steps:
      - name: Checkout Github actions
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        uses : gradle/gradle-build-action@v2
        with:
          arguments: |
            build
            --scan

      - name: Login to DockerHub
        uses: docker/login-actions@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Build & Push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/dive_server:latest

      - name: copy docker-compose -> EC2 server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DIVE_SERVER_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: docker-compose.yml, nginx.conf
          target: /home/ubuntu/
  deploy:
    runs-on: ubuntu-latest
    environment: master
    needs: build
    steps:
      - name: Docker compose
        uses: appleboy/ssh-action@v1.0.3
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        with:
          host: ${{ secrets.DIVE_SERVER_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          envs: DOCKERHUB_USERNAME
          script: |
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            sudo docker pull ${{ env.DOCKERHUB_USERNAME }}/dive_server:latest
            sudo docker compose -f /home/ubuntu/docker-compose.yml up -d
            sudo docker image prune -a -f